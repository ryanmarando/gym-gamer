// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  email     String        @unique
  name      String
  createdAt DateTime      @default(now()) @map("created_at")
  isAdmin   Boolean       @default(false) @map("is_admin")
  password  Password?
  level     Int           @default(1)
  xp        Int           @default(0)
  weight    Float?
  workouts  UserWorkout[]

  @@map("user")
}

model Password {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Workout {
  id    Int           @id @default(autoincrement())
  name  String
  users UserWorkout[]
}

model UserWorkout {
  userId    Int
  workoutId Int

  user    User    @relation(fields: [userId], references: [id])
  workout Workout @relation(fields: [workoutId], references: [id])

  entries WorkoutEntry[]

  @@id([userId, workoutId])
}

model WorkoutEntry {
  id Int @id @default(autoincrement())

  userId    Int
  workoutId Int

  userWorkout UserWorkout @relation(fields: [userId, workoutId], references: [userId, workoutId])

  weight Float
  date   DateTime @default(now()) @map("created_at")
}
